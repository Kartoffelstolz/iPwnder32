#ifndef libexploit_H
#define libexploit_H

#include <include/usb.h>

typedef int(*exploit_supported)(usb_device_t device);
typedef usb_device_t(*exploit_func)(usb_device_t device);
typedef void(*exploit_log_cb)(char* msg);
typedef void(*exploit_prog_cb)(unsigned int progress);

extern exploit_log_cb exploit_log;
extern exploit_prog_cb exploit_prog;

#define LOG exploit_log

#define error(x, args...) printf("\nERROR: "x"\n", ##args)

typedef struct exploit_list {
	char* name;
	exploit_supported supported;
	exploit_func exploit;
	struct exploit_list* next;
} exploit_list;

void libexploit_set_log_cb(exploit_log_cb new_cb);
void libexploit_set_prog_cb(exploit_prog_cb new_cb);
void libexploit_init();
int libexploit_get_device();
int libexploit_compatible();
int libexploit_exploit();
void libexploit_exit();

#endif
